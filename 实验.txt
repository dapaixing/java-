#include<stdio.h>
#include<math.h>
int i,j,k;
char c,s;
char token[10],a[30];
int letter(chars)
{
  if(s>=97&&s<=122) return(1);
    else return(0);
}
int digit(chars)
{
 if(s>=48&&s<=57) return(1)
    else return(0);
}
void get();
   {
i++;
c=a[i];
int lookup()
{
 if(!strcmp(token,¡±while¡±)) return(1);
 else if(!strcmp(token,¡±if¡±)) return(2);
 else if(!strcmp(token,¡±else¡±)) return(3);
 else if(!strcmp(token,¡±switch¡±)) return(4);
 else if(!strcmp(token,¡±case¡±)) return(5);
 else return(6);
}
void main()
{
 printf(¡°input your source program:\n¡±);
  i=0;
  do
   {i=i+1;
    scanf(¡°%c¡±,&a[i]);
   }
    wile(a[i]!=¡°#¡±);
    getchar():
    for(k=1;k<10;k++)
    token[k]=¡± ¡°;
    i=0;j=0;
    get();
    while(c!=¡±#¡±)
    {
     switch(c);
     {
      case ¡®a¡¯;
      case ¡®b¡¯;
      case ¡®c¡¯;
      case ¡®d¡¯;
      case ¡®e¡¯;
      case ¡®f¡¯;
      case ¡®g¡¯;
      case ¡®h¡¯;
case ¡®i¡¯;
case ¡®j¡¯;
case ¡®k¡¯¡¯
case ¡®l¡¯;
case ¡®m¡¯;
case ¡®n¡¯;
case ¡®o¡¯;
case ¡®p¡¯;
case ¡®q¡¯;
case ¡®r¡¯;
case ¡®s¡¯;
case ¡®t¡¯;
case ¡®u¡¯;
case ¡®v¡¯;
case ¡®w¡¯;
case ¡®x¡¯;
case ¡®y¡¯;
case ¡®z¡¯;
       while(letter(c)||digit(c))
         {
           token[j]=c;j++;get();
         }
          i--;
          k=lookup();
          if(k==6)printf(¡°(%d,%s)\n¡±,k,token);
          else printf(¡°(%d,-)\n¡±,k);
          break;
          case¡¯0¡¯;
 case¡¯1¡¯;
 case¡¯2¡¯;
case¡¯3¡¯;
case¡¯4¡¯;
case¡¯5¡¯;
case¡¯6¡¯;
case¡¯7¡¯;
case¡¯8¡¯;
case¡¯9¡¯;
      while(digit(c))
       {
        token[j]=c;
j++;
get();
}
i--;
ptintf(¡°(7,%s)\n¡±,token);
break;
case¡¯+¡¯:printf(¡°(¡®+¡¯,-)\n¡±);break;
case¡¯-¡¯:printf(¡°(¡®-¡¯,-)\n¡±);break;
case¡¯*¡¯:printf(¡°(¡®*¡¯,-)\n¡±);break;
case¡¯<=¡¯:get();
if(c==¡±=¡±)printf(¡°(recop,LE)\n¡±);
else{i--; 
printf(¡°(recop,LT)\n¡±);
}
break;
case¡¯=¡¯:get();
if(c==¡±=¡±)printf(¡°(recop,EQ)\n¡±);
else{i--;
    printf(¡°(¡®-¡¯,-)\n¡±);
   }
break;
 case¡¯j¡¯:printf(¡°|¡¯j¡¯,-)\n¡±);break;
case¡¯(¡¯:printf(¡°|¡¯(¡¯,-)\n¡±);break;
case¡¯-¡¯:printf(¡°|¡¯-¡¯,-)\n¡±);break;
case¡¯)¡¯:printf(¡°|¡¯)¡¯,-)\n¡±);break;
case¡¯\n¡¯:printf¡±|¡¯\n¡¯,-)\n¡±;break;
 case¡¯;¡¯:break;
 default:printf(¡°error!!¡±);
}
iI=0;
get();
for(k=1;k<10;k++)
token[k]=¡± ¡°;
}
     getchar();
}
